%% read the WU TSR(tumor stroma ratio) data
%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: WU_n112_Outcome_SP_ratio_filename.xlsx
%    Worksheet: Sheet1
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2021/01/15 15:27:42

%% Import the data
[~, ~, raw] = xlsread('/mnt/md0/_datasets/OralCavity/TMA_arranged/WU/WU_n112_Outcome_SP_ratio_filename_date.xlsx','Sheet1');
raw = raw(2:end,:);
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
stringVectors = string(raw(:,[1,3,5,8,9,11,15,16,17,18,20,21,22,23,24,27,28,29,30]));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[2,4,6,7,10,12,13,14,19,25,26]);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Create table
WUn112OutcomeSPratiofilename = table;

%% Allocate imported array to column variable names
WUn112OutcomeSPratiofilename.SP = stringVectors(:,1);
WUn112OutcomeSPratiofilename.ImageAnalysis = data(:,1);
WUn112OutcomeSPratiofilename.FileName = stringVectors(:,2);
WUn112OutcomeSPratiofilename.Age = data(:,2);
WUn112OutcomeSPratiofilename.PathHisto = categorical(stringVectors(:,3));
WUn112OutcomeSPratiofilename.TumorSize = data(:,3);
WUn112OutcomeSPratiofilename.Depth = data(:,4);
WUn112OutcomeSPratiofilename.TStage = stringVectors(:,4);
WUn112OutcomeSPratiofilename.NStage = stringVectors(:,5);
WUn112OutcomeSPratiofilename.ECEbyCopath = data(:,5);
WUn112OutcomeSPratiofilename.FinalPathStageClassification = stringVectors(:,6);
WUn112OutcomeSPratiofilename.Margins = data(:,6);
WUn112OutcomeSPratiofilename.ComorbidityScore = data(:,7);
WUn112OutcomeSPratiofilename.Smoking = data(:,8);
WUn112OutcomeSPratiofilename.Sex = categorical(stringVectors(:,7));
WUn112OutcomeSPratiofilename.Race = categorical(stringVectors(:,8));
WUn112OutcomeSPratiofilename.Chemo = categorical(stringVectors(:,9));
WUn112OutcomeSPratiofilename.TreatmentObjective = categorical(stringVectors(:,10));
WUn112OutcomeSPratiofilename.FollowupLength = data(:,9);
WUn112OutcomeSPratiofilename.PatientStatus = categorical(stringVectors(:,11));
WUn112OutcomeSPratiofilename.DiseaseStatus = categorical(stringVectors(:,12));
WUn112OutcomeSPratiofilename.LocalFailure = categorical(stringVectors(:,13));
WUn112OutcomeSPratiofilename.RegionalFailure = categorical(stringVectors(:,14));
WUn112OutcomeSPratiofilename.DistMetastasis = categorical(stringVectors(:,15));
WUn112OutcomeSPratiofilename.epiother_tissue = data(:,10);
WUn112OutcomeSPratiofilename.epiepiother_tissue = data(:,11);
WUn112OutcomeSPratiofilename.DxDate = stringVectors(:,16);
WUn112OutcomeSPratiofilename.TreatmentStartDate = stringVectors(:,17);
WUn112OutcomeSPratiofilename.LastFUDate = stringVectors(:,18);
WUn112OutcomeSPratiofilename.LastDiseaseFreeFUDate = stringVectors(:,19);

%% Clear temporary variables
clearvars data raw stringVectors R;

%% univariable analysis%%

TvsS=WUn112OutcomeSPratiofilename.epiother_tissue;
TSR=WUn112OutcomeSPratiofilename.epiepiother_tissue;


followup=WUn112OutcomeSPratiofilename.FollowupLength;
disease_status=WUn112OutcomeSPratiofilename.DiseaseStatus=='with disease';
disease_reccurence=WUn112OutcomeSPratiofilename.RegionalFailure=='Yes'|...
    WUn112OutcomeSPratiofilename.LocalFailure=='Yes'|WUn112OutcomeSPratiofilename.DistMetastasis=='Yes';

cens_recurrence=disease_reccurence==0&WUn112OutcomeSPratiofilename.PatientStatus=='Dead';
cens_disease_status=disease_status==0&WUn112OutcomeSPratiofilename.PatientStatus=='Alive';

% followup for disease status
X = [TSR];
[b,logl,H,stats] = coxphfit(X,followup,'censoring',cens_disease_status);

i=1;
for i=1:1
   fprintf('death with disease p=%.8f,HR ratio(95CI)=%.2f(%.2f-%.2f)\n', stats.p(i),exp(stats.beta(i)),exp(stats.beta(i)-1.96*stats.se(i)),exp(stats.beta(i)+1.96*stats.se(i)));
end
%% followup for recurrence
date_treatment = datetime(WUn112OutcomeSPratiofilename.TreatmentStartDate, 'InputFormat', 'MM/dd/yyyy');
date_lastDiseaseFree = datetime(WUn112OutcomeSPratiofilename.LastDiseaseFreeFUDate, 'InputFormat', 'MM/dd/yyyy');
rfollowup=datenum(date_lastDiseaseFree-date_treatment);
X = [TSR];
[b,logl,H,stats] = coxphfit(X,rfollowup,'censoring',cens_recurrence);

i=1;
for i=1:1
   fprintf('recurrence p=%.8f,HR ratio(95CI)=%.2f(%.2f-%.2f)\n', stats.p(i),exp(stats.beta(i)),exp(stats.beta(i)-1.96*stats.se(i)),exp(stats.beta(i)+1.96*stats.se(i)));
end
% followup for recurrence or death
date_treatment = datetime(WUn112OutcomeSPratiofilename.TreatmentStartDate, 'InputFormat', 'MM/dd/yyyy');
date_lastDiseaseFree = datetime(WUn112OutcomeSPratiofilename.LastDiseaseFreeFUDate, 'InputFormat', 'MM/dd/yyyy');
rfollowup=datenum(date_lastDiseaseFree-date_treatment);
rfollowup=rfollowup/365;
followup2=min(followup,rfollowup);
X = [TSR];
[b,logl,H,stats] = coxphfit(X,followup2,'censoring',cens_disease_status);

i=1;
for i=1:1
   fprintf('recurrence or death p=%.8f,HR ratio(95CI)=%.2f(%.2f-%.2f)\n', stats.p(i),exp(stats.beta(i)),exp(stats.beta(i)-1.96*stats.se(i)),exp(stats.beta(i)+1.96*stats.se(i)));
end
% TStage
X = [TSR];
TStage = WUn112OutcomeSPratiofilename.TStage;
Y=TStage;
Y(Y~='T1'&Y~='T2'&Y~='T3'&~startsWith(Y,'T4'))=NaN;
Y(Y=='T1')=1;
Y(Y=='T2')=2;
Y(Y=='T3')=3;
Y(startsWith(Y,'T4'))=4;
Y=double(Y);
G=~isnan(Y);
Y=Y(G==1);
X=X(G==1);
[RHO, PVAL] = corr(X,Y, 'Type', 'Spearman');
fprintf('TStage Spearman corr p=%.8f, rho=%.2f\n', PVAL, RHO);
threshold=median(X);
G1=X>threshold;
G2=X<threshold;
x=Y(G1);
y=Y(G2);
[h,p,ci,stats]= ttest(x,y);
fprintf('TStage ttest p=%.8f\n', p);
%[b,logl,H,stats] = coxphfit(X,TStage);

%i=1;
%for i=1:1
%   fprintf('TStage p=%.8f,HR ratio(95CI)=%.2f(%.2f-%.2f)\n', stats.p(i),exp(stats.beta(i)),exp(stats.beta(i)-1.96*stats.se(i)),exp(stats.beta(i)+1.96*stats.se(i)));
%end

% NStage
X = [TSR];
NStage = WUn112OutcomeSPratiofilename.NStage;
Y=NStage;
Y(Y~='N0'&Y~='N1'&~startsWith(Y,'N2'))=NaN;
Y(Y=='N0')=0;
Y(Y=='N1')=1;
Y(startsWith(Y,'N2'))=2;
Y=double(Y);
G=~isnan(Y);
Y=Y(G==1);
X=X(G==1);
[RHO, PVAL] = corr(X,Y, 'Type', 'Spearman');
fprintf('NStage Spearman corr p=%.8f, rho=%.2f\n', PVAL, RHO);
threshold=median(X);
G1=X>threshold;
G2=X<threshold;
x=Y(G1);
y=Y(G2);
[h,p,ci,stats]= ttest(x,y);
fprintf('NStage ttest p=%.8f\n', p);

% FinalPathStageClassification
X = [TSR];
FinalPathStageClassification = WUn112OutcomeSPratiofilename.FinalPathStageClassification;
Y=FinalPathStageClassification;
Y(Y~='I'&Y~='II'&Y~='III'&~startsWith(Y,'IV'))=NaN;
Y(Y=='I')=1;
Y(Y=='II')=2;
Y(Y=='III')=3;
Y(startsWith(Y,'IV'))=4;
Y=double(Y);
G=~isnan(Y);
Y=Y(G==1);
X=X(G==1);
[RHO, PVAL] = corr(X,Y, 'Type', 'Spearman');
fprintf('FinalPathStageClassification Spearman corr p=%.8f, rho=%.2f\n', PVAL, RHO);
threshold=median(X);
G1=X>threshold;
G2=X<threshold;
x=Y(G1);
y=Y(G2);
[h,p,ci,stats]= ttest(x,y);
fprintf('FinalPathStageClassification ttest p=%.8f\n', p);

%% backup ALL below



% % sex
% X = [sex];
% [b,logl,H,stats] = coxphfit(X,followup,'censoring',cens);
% 
% i=1;
% for i=1:1
%     fprintf('p=%.8f,HR ratio(95CI)=%.2f(%.2f-%.2f)\n', stats.p(i),exp(stats.beta(i)),exp(stats.beta(i)-1.96*stats.se(i)),exp(stats.beta(i)+1.96*stats.se(i)));
% end
% 
% % stage

% X = [stage];
% [b,logl,H,stats] = coxphfit(X,followup,'censoring',cens);
% 
% i=1;
% for i=1:1
%     fprintf('p=%.8f,HR ratio(95CI)=%.2f(%.2f-%.2f)\n', stats.p(i),exp(stats.beta(i)),exp(stats.beta(i)-1.96*stats.se(i)),exp(stats.beta(i)+1.96*stats.se(i)));
% end

%% getting automatic data %%
% 
% data=load('allvariable.mat');
% imgNames=data.TestSetNames;
% 
% data79(:,1)=strrep(data79(:,1),'norm_','');
% imgNames=strrep(imgNames,'.mat','');
% 
% vals=[];
% num=length(data79);
% labels=zeros(num,1);
% for i=1: num
%     val=find(strcmp(data79(i,1),imgNames));
%     labels(i)=data.real_predlabels(val);
% end
% 
% 
% %% multivariable analysis %%
% 
% X = [age sex stage labels];
% [b,logl,H,stats] = coxphfit(X,followup,'censoring',cens);
% 
% i=1;
% for i=1:4
%     fprintf('p=%.8f,HR ratio(95CI)=%.2f(%.2f-%.2f)\n', stats.p(i),exp(stats.beta(i)),exp(stats.beta(i)-1.96*stats.se(i)),exp(stats.beta(i)+1.96*stats.se(i)));
% end
 



